doctype html
html(lang="en")
  head
    title Week 8 Networks and Color. MIDS W209 Information Visualization Slides
    meta(charset="utf-8")
    meta(name="author", content="John Alexis Guerra Gómez")
    meta(name="description", content="Week 8 Networks and Color. MIDS W209 Information Visualization Slides")

    meta(name="apple-mobile-web-app-capable" content="yes")
    meta(name="apple-mobile-web-app-status-bar-style" content="black-translucent")
    meta(name="viewport" content="width=device-width, initial-scale=1.0")

    link(rel="stylesheet", href="https://fonts.googleapis.com/css?family=Fjalla+One|Raleway|PT+Sans+Narrow")

    //- Adobe fonts
    link(rel="stylesheet" href="https://use.typekit.net/yjc0afr.css")

    //- <!-- Theme used for syntax highlighting of code -->
    link(rel="stylesheet" href="../plugin/highlight/monokai.css" id="highlight-theme")


    link(href="../css/reveal.css", rel="stylesheet")
    link(href="../css/theme/white.css", rel="stylesheet", id="theme")
    link(href="../css/style.css", rel="stylesheet")

  body
    .reveal
      .slides
        section
          h1.title Networks and Color
            br
            small MIDS W209: Information Visualization

          div.r-stretch

          div.tiny
            a(href="https://johnguerra.co/", target="_blank") #[strong  John Alexis Guerra Gómez]
            span  |  john.guerra[at]gmail.com
            a(href="https://twitter.com/duto_guerra")  |  @duto_guerra
            br

            a(href="https://andyreagan.com/", target="_blank") #[strong  Andy Reagan]
            span  |  andy[at]andyreagan.com
            a(href="https://twitter.com/andyreagan")  |  @andyreagan
            br

            a(href="https://johnguerra.co/lectures/MIDS_W209_Information_Visualization/08_Networks_and_Trees/", target="_blank") https://johnguerra.co/lectures/MIDS_W209_Information_Visualization/08_Networks_and_Trees/

          div.logo
            a(href="https://datascience.berkeley.edu/")
              img.logo(data-src="../shared_images/UC_Berkeley_wordmark_cal_gold.png" alt="University Of California at Berkeley logo")
          div.tiny Partially based on
            a(href="https://www.cs.ubc.ca/~tmm/talks.html#minicourse14")  slides from Tamara Munzner

        //- Outline
        section#outline
          section.full
            h2 Arrange Networks and Trees

            img(style="max-height: 400px" data-src="../shared_images/vad_book_alldiagrams/how_networks_and_trees.png", alt="How Networks and Trees")

          section
            h2 What We Are Going to Learn
            ul.small.small
              li.fragment How to recognize, create, and store networks
              li.fragment Algorithms to visualize network data
              li.fragment How to use color 

        section#networkBasics
          section
            h1 Networks: Basics

          section(style="text-align: left")
            h3 Define Networks
            div
              p Networks are defined by two things: nodes and links.
              br
              p <strong>Nodes</strong>: a collection of entities which have properties that are somehow related to each other
              ul.small.small
                li E.g., people, forks in rivers, proteins, web pages, organisms, etc.
              p <strong>Edges</strong>: connections between nodes
              ul.small.small
                li Links may be directed or undirected
                li Links may be binary or weighted

          section
            h2 Just Some Examples
            ul
              li Tournaments
              li Organization charts
              li Genealogy
              li Diagramming (e.g., Visio)
              li Biological interactions (genes, proteins)
              li Computer networks
              li Social networks
              li Simulation and modeling
              li Integrated circuit design
              li River systems
              li #[a(href="http://www.uvm.edu/pdodds/teaching/courses/coconuts/slides/complex-networks/") Many, many more (and some history)]


          section
            h3 How to Store Network Data
            ul.small.small
              li.fragment Node and link files
              li.fragment Adjacency matrix
              li.fragment Nested: XML/JSON
              li.fragment Flat
              li.fragment #[a(target="_blank" href="https://networkx.github.io/documentation/stable/reference/readwrite/index.html") Many others: list of formats from NetworkX]

          section
            h3 Node and Link Files
            img(style="" data-src="../shared_images/networks/edgelist.png", alt="Edge List")

          section
            h3 Node and Link Files (cont.)
            img(style="" data-src="../shared_images/networks/adjacencylist.png", alt="Adjacency List")

          section
            h3 Adjacency Matrix
            div.scrollable-slide
              img(style="width: auto; max-height: 1000px;" data-src="../shared_images/networks/adjacencymatrix.png", alt="Adjacency Matrix")

          section
            h3 Nested: XML/JSON
            div.scrollable-slide
              img(style="width: auto; max-height: 1000px;" data-src="../shared_images/networks/graphml.png", alt="GraphML")

          section
            h3 How to Create Network Data
            ul
              li.fragment Group by common attribute.
              li.fragment Identify nodes, extract links.

          section(style="text-align: left")
            h3 From Flat Data
            p Say we have tabular data for Les Miserables with columns for "scene", "character", and "line". We want to examine the network of which characters co-occur in scenes. Take all unique characters are nodes and link between all characters in a scene together.
            ul
              li JS: #[code d3.nest().key(function(d) { return d.scene; })].
              li Python: #[code pd.groupby('scene')].

          section
            h3 Identify Nodes, Extract Links
            p Social network data extract
            ul
              li Loop through all of the messages.
              li Add to a list of all users.
              li Add to an edge list that has all "mentions" of another user.


        section#forceSimulations
          section
            h1 Networks: Force Simulations

          section.full
            h3 Idiom: Force-Directed Placement
            .flex
              .twothirds
                ul
                  li.fragment Visual encoding:
                    ul
                      li Link connection marks, node point marks
                  li.fragment Considerations:
                    ul
                      li.fragment Spatial position: no meaning directly encoded
                        ul
                          li Left free to minimize crossings
                      li.fragment Proximity semantics?
                        ul
                          li Sometimes meaningful
                          li Sometimes arbitrary, artifact of layout algorithm
                          li.fragment Tension with length
                            ul
                              li.fragment Long edges more visually salient than short
                  li.fragment Tasks:
                    ul
                      li.fragment Explore topology; locate paths, clusters
                  li.fragment Scalability:
                    ul
                      li.fragment Node/edge density E < 4N


          section.full
            h3 Idiom: SFDP (Multi-Level Force-Directed Placement)
            .flex
              .twothirds
                ul.small
                  li.fragment Data:
                  ul
                    li.fragment Original: network
                    li.fragment Derived: cluster hierarchy atop it
                  li.fragment Considerations:
                  ul
                    li.fragment Better algorithm for same encoding technique
                    ul
                      li.fragment Same: fundamental use of space
                      li.fragment Hierarchy used for algorithm speed/quality but not shown explicitly
                    ul
                      li.fragment (More on algorithm vs. encoding in afternoon)
                      // Note @john-guerra: consider removing "afternoon" here
                  li.fragment Scalability:
                    li.fragment Nodes, edges: 1,000-10,000
                    li.fragment Hairball problem eventually hits


          section
            h3.demo Force-Directed Layout
            iframe.blocks(data-src="http://blockbuilder.org/mbostock/4062045")
            div.tiny
              a(target="_blank" href="http://blockbuilder.org/mbostock/4062045") http://blockbuilder.org/mbostock/4062045
            div.tiny
              a(target="_blank" href="http://bl.ocks.org/mbostock/") by mbostock


          section
            h2 Use the Force!

          section
            h3.demo Beeswarm Plot
            iframe.blocks(data-src="http://blockbuilder.org/mbostock/6526445e2b44303eebf21da3b6627320")
            div.tiny
              a(target="_blank" href="http://blockbuilder.org/mbostock/6526445e2b44303eebf21da3b6627320") http://blockbuilder.org/mbostock/6526445e2b44303eebf21da3b6627320
            div.tiny
              a(target="_blank" href="http://bl.ocks.org/mbostock/") by mbostock

          section
            h3.demo Collision Detection
            iframe.blocks(data-src="http://blockbuilder.org/mbostock/31ce330646fa8bcb7289ff3b97aab3f5")
            div.tiny
              a(target="_blank" href="http://blockbuilder.org/mbostock/31ce330646fa8bcb7289ff3b97aab3f5") http://blockbuilder.org/mbostock/31ce330646fa8bcb7289ff3b97aab3f5
            div.tiny
              a(target="_blank" href="http://bl.ocks.org/mbostock/") by mbostock

          section
            h3.demo Force in a Box
            iframe.blocks(data-src="http://blockbuilder.org/john-guerra/14c943d8f198d9f3fef2")
            div.tiny
              a(target="_blank" href="http://blockbuilder.org/john-guerra/14c943d8f198d9f3fef2") http://blockbuilder.org/john-guerra/14c943d8f198d9f3fef2
            div.tiny
              a(target="_blank" href="http://bl.ocks.org/john-guerra/") by john-guerra

        section#adjacencyIdiom
          section
            h2 Idiom: Adjacency Matrix View
            .flex
              .twothirds
                ul.small

                  li.fragment Data: network
                  ul
                    li.fragment Transform into same data/encoding as heatmap
                  li.fragment Derived data: table from network
                  ul
                    li.fragment One quantitative attribute
                    ul
                      li.fragment Weighted edge between nodes
                    li.fragment Two categorical attributes: node list x 2
                  li.fragment Visual encoding:
                  ul
                    li.fragment Cell shows presence/absence of edge
                  li.fragment Tasks:
                    ul
                      li.fragment Identify clusters (topology)
                      li.fragment Summarize topology/distribution
                  li.fragment Scalability:
                  ul
                    li.fragment 1,000 nodes, one million edges

          section
            h3.demo Adjacency Matrix
            iframe.blocks(data-src="https://bost.ocks.org/mike/miserables/")
            div.tiny
              a(target="_blank" href="https://bost.ocks.org/mike/miserables/") https://bost.ocks.org/mike/miserables/

          section
            h2 Connection vs. Adjacency Comparison
            .flex
              .twothirds
                ul.small

                  li.fragment Adjacency matrix strengths:
                  ul
                    li.fragment Predictability, scalability, supports reordering
                    li.fragment Some topology tasks trainable
                  li.fragment Node-link diagram strengths:
                  ul
                    li.fragment Topology understanding, path tracing
                    li.fragment Intuitive, no training needed
                  li.fragment Empirical study:
                  ul
                    li.fragment Node-link best for small networks
                    li.fragment Matrix best for large networks...
                    ul
                      li.fragment ...if tasks don’t involve topological structure!

        section#otherNetworkIdioms
          section
            h1 Networks: Other Idioms

          section
            h2.demo Chord Diagram
            div.left.small
              ul.small
                li Data: networks (small number of nodes)
                li Tasks: summarize connections; identify highest degree
                li Considerations: usually good for origin to destination
            div.right
              img.fill(data-src="../shared_images/chord.svg" alt="Chord Diagram")
              div.tiny
                a(href="https://observablehq.com/@john-guerra/mouseover-chord-diagram") https://observablehq.com/@john-guerra/mouseover-chord-diagram


          section
            h2.demo Edge Bundling
            div.left.small
              ul.small
                li Data: networks
                li Tasks: summarize common connections
                li Considerations:
                  ul.small
                    li Reduces cluttering
                    li Requires computing time
                    li Works with any link based idiom
            div.right
              img.fill(data-src="../shared_images/edgeBundling.png" alt="Edge Bundling")
              div.tiny
                a(href="https://observablehq.com/@d3/hierarchical-edge-bundling") https://observablehq.com/@d3/hierarchical-edge-bundling

          section
            h2.demo Arc Diagram
            div.left.small
              ul.small
                li Data: networks (few nodes)
                li Tasks: summarize common connections.
                li Considerations:
                  ul.small
                    li Nodes' order matters.
                    li Better with highly clustered data
            div.right
              img.fill(data-src="../shared_images/arcDiagram.svg" alt="Arc Diagram")
              div.tiny
                a(href="https://observablehq.com/@d3/arc-diagram") https://observablehq.com/@d3/arc-diagram

          section
            h2.demo Arc Diagram (cont.)
            iframe.blocks(data-src="https://blockbuilder.org/rpgove/53bb49d6ed762139f33bdaea1f3a9e1c")
            div.tiny
              a(target="_blank" href="https://blockbuilder.org/rpgove/53bb49d6ed762139f33bdaea1f3a9e1c") https://blockbuilder.org/rpgove/53bb49d6ed762139f33bdaea1f3a9e1c
            div.tiny
              a(target="_blank" href="http://bl.ocks.org/rpgove/") by Robert Gove

          section
            h2.demo Hive Plots
            div.tiny
              a(target="_blank" href="https://bost.ocks.org/mike/hive/") Hive Plots

          section(data-background-size="contain" data-background-iframe="https://bost.ocks.org/mike/hive/")

          section
            h2.demo Semantic Substrates
            div.left.small
              ul.small
                li Data: networks with many edges
                li Task: summarize distribution of non network attribs
                li Considerations:
                  ul.small
                    li Easier to understand
                    li Scale well
                    li Edges on demand work best
            div.right
              figure
                img.fill(data-src="../shared_images/semanticSubstrates.gif" alt="Semantic Substrates")
                figcaption.reference
                  a(href="https://johnguerra.co/viz/influentials/story/?hashtag=DeepIndaba2019") https://johnguerra.co/viz/influentials/story/?hashtag=DeepIndaba2019


          section
            a(href="https://www.twosixlabs.com/6-ways-visualize-graphs/")
              img(data-src="../shared_images/6waystovisualizegraphs.png", alt="Six ways of visualizing networks by Robert Gove")
              figcaption.reference Robert Gove's Six ways of visualizing Networks

          section
            h2 Idiom: Sankey Diagram

            .flex
              .half
                ul
                  li.fragment Good for depicting flow
                  li.fragment Not that well-known
              .half
                a(href="https://observablehq.com/@d3/sankey-diagram") Sankey Diagram
                

          section
            h2 Idiom: Parallel Sets

            .flex
              .half
                ul
                  li.fragment Good for depicting flow
                  li.fragment Not that well known
              .half
                div.
                  <div id="observablehq-c6a5e063">
                    <div class="observablehq-viewof-tension"></div>
                    <div class="observablehq-chart"></div>
                    <div style="overflow: hidden;"><a style="display: block; float:right;" href="https://observablehq.com/@john-guerra/parallel-sets"><object type="image/svg+xml" style="pointer-events: none;" width=180 height=22 data="https://static.observableusercontent.com/files/c3fab254a006f1a3a1f9f63aba8ab1460db4752529036b9962950bde0ec195bab823daa6b278b1c3401e545b3bd640ddfdcad805cf9859af218cb2b9fed4ddf0"></object></a></div>
                  </div>
                  <script type="module">
                    import {Runtime, Inspector} from "https://cdn.jsdelivr.net/npm/@observablehq/runtime@4/dist/runtime.js";
                    import define from "https://api.observablehq.com/@john-guerra/parallel-sets.js?v=3";
                    (new Runtime).module(define, name => {
                      if (name === "viewof tension") return Inspector.into("#observablehq-c6a5e063 .observablehq-viewof-tension")();
                      if (name === "chart") return Inspector.into("#observablehq-c6a5e063 .observablehq-chart")();
                    });
                  </script>
                a(href="https://observablehq.com/@john-guerra/parallel-sets") https://observablehq.com/@john-guerra/parallel-sets

        section#networkStatistics
          section
            h1 Metrics and Statistics


          section
            h3 Simple Stuff
            div.left
              ul
                li Number of nodes, number of edges
                li Connected components: count of separate groups of nodes
                li Graph density: percent of possible links that are present
            div.right
              figure
                img.fill(data-src="../shared_images/networks/1.png")

          section
            h3 Degree Distribution
            div.left
              ul
                li E.g., run “Average Degree” tab in Gephi
                li For pure random networks: $P_k = e ^ { \langle k \rangle } \frac{ \langle k \rangle ^k}{k!}$
                li For preferential attachment: $P_k ~\sim~ k ^ {-\gamma}$
            div.right
              figure
                img.fill(data-src="../shared_images/networks/3.png")


          section
            h3 Path Length
            div.left
              ul
                li E.g., run “Average Path Length” in Gephi
                li The path length between nodes i and j defined as $d_{ij}$
                li Average path length $\langle d_{ij} \rangle$
                li Network diameter $d_\max = \max _{i,j} d_{ij}$
            div.right
              figure
                img.fill(data-src="../shared_images/networks/2.png")

          section
            h3 Centrality
            div.left
              ul
                li Betweenness centrality: number of shortest paths across node
                li Degree centrality (node degree), also edge centrality (not in Gephi, use NetworkX)
                li Eigenvector centrality $Ax = \lambda x$
                li Closeness $d_{cl} = \left [  \sum _{ij}  d_{ij} ^ {-1} / n \choose 2 \right ] ^ {-1}$
            div.right
              figure
                img.fill(data-src="../shared_images/networks/4.png")

          section
            h3 More Centrality
            div
              ul
                li PageRank, like eigenvector centrality, can be written as an eigenvalue problem: $$PR(p_i) = \frac{1-d}{N} + \sum _{p_j} \frac{PR(p_j)}{L(p_j)}$$

          section
            h3 Clustering
            div.left
              ul
                li Watts and Strogatz measure: $$ C_1 = \left \langle \frac{\sum_{j_1,j_2\in N} a_{j_1j_2}}{k_i(k_i-1)/2} \right \rangle $$
                li Newman (and Gephi): $$ C_2  = \frac{3 \times \textrm{triangles}}{\textrm{triples}} $$
            div.right
              figure
                img.fill(data-src="../shared_images/networks/5.png")

          section
            h3 Modularity and Structure
            figure
                img.fill(data-src="../shared_images/networks/6.png")

        section#networkTools
          section
            h1 Tools

          section
            h3 Tools That Contain Layout Algorithms
            ul.small
              li
                a(href="https://github.com/d3/d3-force") d3
              li
                a(href="https://networkx.github.io/") NetworkX
              li
                a(href="https://www.smrfoundation.org/nodexl/") NodeXL
              li
                a(href="https://gephi.org/") Gephi.
              li
                a(href="https://github.com/hackl/tikz-network") LaTeX (TikZ)
              li
                a(href="https://graphviz.org/") Graphviz (dot)

          section
            h3 Combining Layouts and Visualization
            p Many possibilities: Connect any tools that can compute layouts to any other visualation tool. A few useful examples:
            ul.small
              li d3 + Vega-Lite (we've seen many d3!)
              li NetworkX + Matplotlib (built-in)

          section
            h3 NetworkX, Part I
            div.scrollable-slide
              img(style="width: auto; max-height: 1000px;" data-src="../shared_images/networks/networkx1.png", alt="NetworkX Force")
            div.tiny
              a(target="_blank" href="https://github.com/andyreagan/MIDS_W209_Data_Visualization_Slides/blob/master/13/Exercises/Network-data.ipynb") notebook

          section
            h3 NetworkX, Part II
            div.scrollable-slide
              img(style="width: auto; max-height: 1000px;" data-src="../shared_images/networks/networkx2.png", alt="NetworkX Circle")

          section
            h3 NetworkX, Part III
            li NetworkX has #[a(href="http://networkx.github.io/documentation/latest/gallery.html") a nice online gallery] of other, fancier drawings.

        section#colorIntro
          section
            h1 Color

          section
            h3 Encode, Map, Color
            img(style="max-height: 400px" data-src="../shared_images/vad_book_alldiagrams/10_01_encode_map.png", alt="Encode Map Color")

        section#colorDetail
          section
            h3 Categorical Color
            img(style="max-height: 400px" data-src="../shared_images/vad_book_alldiagrams/color/1.png")

          section
            h3 Decomposing Color
            div.left(style="width:65%;")
              ul.small
                li First rule: do not talk about color!
                ul.small
                  li Color is confusing if treated as monolithic
                li Decompose into three channels
                ul.small
                  li Ordered can show magnitude
                  ul.small
                    li Luminance: how bright
                    li Saturation: how colorful
                  li Categorical can show identity
                  ul.small
                    li Hue: what color
                li Channels have different properties
                ul.small
                  li What they convey directly to perceptual system
                  li How much they can convey: how many discriminable bins can we use?
            div.right(style="width:30%;")
              img(style="max-height: 400px" data-src="../shared_images/vad_book_alldiagrams/color/2.png")

          section
            h3 Spectral Sensitivity
            img(style="max-height: 400px" data-src="../shared_images/vad_book_alldiagrams/color/3.png")

          section
            h3 Luminance
            div.left
              ul.small
                li Need luminance for edge detection
                ul.small
                  li Fine-grained detail only visible through luminance contrast
                  li Legible text requires luminance contrast!
                li Intrinsic perceptual ordering
            div.right
              img(style="max-height: 400px" data-src="../shared_images/vad_book_alldiagrams/color/4.png")

          section
            h3 Color Spaces
            img(style="max-height: 400px" data-src="../shared_images/vad_book_alldiagrams/color/6.png")

          section
            h3 Designing for Color Deficiency: Check with Simulator
            img(style="max-height: 400px" data-src="../shared_images/vad_book_alldiagrams/color/7.png")

          section
            h3 Designing for Color Deficiency: Avoid Encoding by Hue Alone
            div.left
              ul
                li Redundantly encode.
                  ul
                    li Vary luminance.
                    li Change shape.
            div.right
              img(style="max-height: 400px" data-src="../shared_images/vad_book_alldiagrams/color/8.png")

          section
            h3 Color Deficiency: Reduces Color to Two Dimensions
            img(style="max-height: 400px" data-src="../shared_images/vad_book_alldiagrams/color/9.png")

          section
            h3 Designing for Color Deficiency: Blue-Orange is Safe
            img(style="max-height: 400px" data-src="../shared_images/vad_book_alldiagrams/color/10.png")

          section
            h3 Bezold Effect: Outlines Matter
            img(style="max-height: 400px" data-src="../shared_images/vad_book_alldiagrams/color/11.png")

          section
            h3 Relative Judgments: Color and Illumination
            img(style="max-height: 400px" data-src="../shared_images/vad_book_alldiagrams/color/12.png")

          section
            h3 Relative Judgments: Color and Illumination (cont.)
            img(style="max-height: 400px" data-src="../shared_images/vad_book_alldiagrams/color/13.png")

          section
            h3 Categorical Color: Limited Number of Discriminable Bins
            div.left
              ul
                li Human perception built on relative comparisons
                  ul
                    li Great if color is contiguous
                    li Suprisingly bad for absolute comparisons
                li Noncontiguous small regions of color
                  ul
                    li Fewer bins than you want
                    li Rule of thumb: 6-12 bins, including background and highlights
            div.right
              img(style="max-height: 400px" data-src="../shared_images/vad_book_alldiagrams/color/14.png")

          section
            h3 Glyphs
            div.left
              ul
                li Glyphs: composite objects
                  ul
                    li Internal structure with multiple marks
                li Alternative to color encoding
                  ul
                    li Or coding with any single channel
            div.right
              img(style="max-height: 400px" data-src="../shared_images/vad_book_alldiagrams/color/15.png")

          section
            h3 ColorBrewer
            img(style="max-height: 400px" data-src="../shared_images/vad_book_alldiagrams/color/16.png")

        section
          section
            h2 Ordered Color

          section
            h3 Ordered Color: Rainbow is Poor Default
            div.left
              ul
                li Problems:
                  ul
                    li Perceptually unordered
                    li Perceptually nonlinear
                li Benefits:
                  ul
                    li Fine-grained structure visible and nameable
                li Alternative:
                  ul
                    li Large-scale structure: fewer hues
                    li Fine structure: multiple hues with monotonically increasing luminance (vs. Viridis R/Python)
            div.right
              img(style="max-height: 400px" data-src="../shared_images/vad_book_alldiagrams/color/18.png")


          section
            h3 Viridis
            p Colorful, perceptually uniform, colorblind-safe, monotonically-increasing luminance
            img(style="max-height: 400px" data-src="../shared_images/vad_book_alldiagrams/color/19.png")

          section
            h3 Colormaps
            div.left
              img(style="max-height: 400px" data-src="../shared_images/vad_book_alldiagrams/color/21.png")
            div.left
              img(style="max-height: 400px" data-src="../shared_images/vad_book_alldiagrams/color/25.png")

        section#mapOther
          section
            h1 Map Other Channels

          section
            div.scrollable-slide
              img(style="width: auto; max-height: 1000px;" data-src="../shared_images/vad_book_alldiagrams/color/23.png")

          section
            h3 Angle
            img(style="max-height: 400px" data-src="../shared_images/vad_book_alldiagrams/color/24.png")

        section#review
          section
            h2 What We Learned
            ul.small.small
              li.fragment How to recognize, create, and store networks
              li.fragment Algorithms to visualize network data
              li.fragment How to use color

    script(src="../js/reveal.js")
    script(src="../plugin/zoom/zoom.js")
    script(src="../plugin/notes/notes.js")
    script(src="../plugin/search/search.js")
    script(src="../plugin/markdown/markdown.js")
    script(src="../plugin/highlight/highlight.js")
    script(src="../plugin/math/math.js")

    //- script(src="https://cdn.jsdelivr.net/npm/vega@5.13.0")
    //- script(src="https://cdn.jsdelivr.net/npm/vega-lite@4.13.1")
    //- script(src="https://cdn.jsdelivr.net/npm/vega-lite-api@0.11.0")
    //- script(src="https://cdn.jsdelivr.net/npm/vega-tooltip@0.23.2")

    script.
      Reveal.initialize({
        controls: true,
        progress: true,
        history: true,
        center: true,
        hash: true,
        //- transition: "convex",

        //- width: "100%",
        //- height: "720px",

        math: {
          mathjax: 'https://cdn.jsdelivr.net/gh/mathjax/mathjax@2.7.8/MathJax.js',
          config: 'TeX-AMS_HTML-full',
        },
        plugins: [ RevealZoom, RevealNotes, RevealSearch, RevealMarkdown, RevealHighlight, RevealMath ]
      });
    script.
      (function(i,s,o,g,r,a,m){i["GoogleAnalyticsObject"]=r;i[r]=i[r]||function(){
      (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
      m=s.getElementsByTagName(o)[0];a.async=1;a.data-src=g;m.parentNode.insertBefore(a,m)
      })(window,document,"script","https://www.google-analytics.com/analytics.js","ga");

      ga("create", "UA-72531610-1", "auto");
      ga("send", "pageview");

